---
title: "H9 - Clientes fiéis compram estatisticamente mais do mesmo produto do que clientes não fiéis."
author: "Vivian Vense Melotto"
date: "2024-08-15"
format: 
  html:
    embed-resources: true
    fig_caption: true
---

 
```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Carregar Pacotes
library(dplyr)
library(ggplot2)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Carregar os arquivos da pasta \_data/clean
pedidos <- read.csv("../_data/clean/e_commerce_pedidos.csv")
clientes <- read.csv("../_data/clean/e_commerce_clientes.csv")
carrinho <- read.csv("../_data/clean/e_commerce_carrinhos.csv")

```


```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Verificar as 10 primeiras linhas e a estrutura dos dataframes

head(pedidos, 10)
head(clientes, 10)
head(carrinho, 10)
str(pedidos)
str(clientes)
str(carrinho)

```


```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Dimensões dos dataframes
dim(pedidos)
dim(clientes)
dim(carrinho)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Sumário estatístico dos dataframes
summary(pedidos)
summary(clientes)
summary(carrinho)
```


```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}

## Limpeza de dados

### Verificar valores NAs
colSums(is.na(pedidos))
colSums(is.na(clientes))
colSums(is.na(carrinho))
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
### Converter colunas de data para o formato Date
pedidos$data <- as.Date(pedidos$data, format = "%d/%m/%Y %H:%M:%S")
clientes$data_nascimento <- as.Date(clientes$data_nascimento, format = "%d/%m/%Y")
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
### Verificar duplicatas
sum(duplicated(pedidos))
sum(duplicated(clientes))
sum(duplicated(carrinho))
```


```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Distribuição de status dos pedidos

table(pedidos$status)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Filtrar pedidos pagos e cancelados

pedidos_pagos <- pedidos %>% filter(status == "Pago")
pedidos_cancelados <- pedidos %>% filter(status == "Cancelado")
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Analisar quantidade de pedidos por cliente

pedidos_por_cliente <- pedidos %>% 
  group_by(id_cliente) %>% 
  summarise(total_pedidos = n())
summary(pedidos_por_cliente$total_pedidos)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Carrinhos abandonados por etapa
table(carrinho$momento_abandono)
```


### Análise de clientes fiéis (mais de 3 pedidos) e não fiéis (3 pedidos ou menos)
```{r}

clientes_fieis <- pedidos %>% 
  filter(id_cliente %in% (pedidos_por_cliente %>% 
                            filter(total_pedidos > 3) %>% 
                            pull(id_cliente)))

clientes_nao_fieis <- pedidos %>% 
  filter(id_cliente %in% (pedidos_por_cliente %>% 
                            filter(total_pedidos <= 3) %>% 
                            pull(id_cliente)))
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Impacto de descontos
### Verificar e converter as colunas de desconto e total para numéricas
pedidos$total <- as.numeric(gsub(",", ".", pedidos$total))
cor(pedidos$total_desconto, pedidos$total)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.show="hide"}
# Visualização de dados

# Gráfico de dispersão
ggplot(pedidos, aes(x = total_desconto, y = total)) +
  geom_point(color = "blue") +
  labs(title = "Relação entre Desconto e Valor Total do Pedido",
       x = "Total de Desconto",
       y = "Valor Total do Pedido") +
  theme_minimal()

```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.show="hide"}
### Histograma
ggplot(pedidos, aes(x = total)) +
  geom_histogram(binwidth = 50, fill = "green", color = "black") +
  labs(title = "Distribuição dos Valores Totais dos Pedidos",
       x = "Valor Total do Pedido",
       y = "Frequência") +
  theme_minimal()
```



```{r,, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.show="hide"}
### Boxplot

ggplot(pedidos, aes(x = factor(total_desconto > 0), y = total, fill = factor(total_desconto > 0))) +
  geom_boxplot() +
  labs(title = "Distribuição do Valor Total dos Pedidos com e sem Desconto",
       x = "Desconto Aplicado",
       y = "Valor Total do Pedido") +
  scale_x_discrete(labels = c("Sem Desconto", "Com Desconto")) +
  scale_fill_manual(values = c("red", "green")) + # Defina as cores desejadas aqui
  theme_minimal()

```




```{r,echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.show="hide"}

### Gráfico de barras para clientes fiéis
ggplot(clientes_fieis, aes(x = produto)) +
  geom_bar(fill = "purple") +
  labs(title = "Frequência de Produtos entre Clientes Fiéis",
       x = "Produto",
       y = "Frequência") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

#

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Análise dos três produtos mais comprados entre clientes fiéis
frequencia_produtos_fieis <- clientes_fieis %>%
  count(produto) %>%
  arrange(desc(n))

top_3_produtos_fieis <- frequencia_produtos_fieis %>%
  top_n(3, n)

print(top_3_produtos_fieis)
```

#### Gráfico de barras para os três produtos mais comprados entre clientes fiéis

```{r}
ggplot(top_3_produtos_fieis, aes(x = reorder(produto, n), y = n)) +
  geom_bar(stat = "identity", fill = "purple") +
  labs(title = "Três Produtos Mais comprados entre Clientes Fiéis",
       x = "Produto",
       y = "Frequência") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Análise dos produtos mais comprados entre clientes não fiéis
frequencia_produtos_nao_fieis <- clientes_nao_fieis %>%
  count(produto) %>%
  arrange(desc(n))

top_3_produtos_nao_fieis <- frequencia_produtos_nao_fieis %>%
  top_n(3, n)

print(top_3_produtos_nao_fieis)
```

#### Gráfico de barras para os três produtos mais comprados entre clientes não fiéis

```{r}

ggplot(top_3_produtos_nao_fieis, aes(x = reorder(produto, n), y = n)) +
  geom_bar(stat = "identity", fill = "purple") +
  labs(title = "Três Produtos Mais comprados entre Clientes Não Fiéis",
       x = "Produto",
       y = "Frequência") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Combinação de dados para análise comparativa entre clientes fiéis e não fiéis
freq_produtos_combinados <- bind_rows(
  frequencia_produtos_fieis %>% mutate(tipo_cliente = "Fiel"),
  frequencia_produtos_nao_fieis %>% mutate(tipo_cliente = "Não Fiel")
)
```

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
print(freq_produtos_combinados)
```

### Testes de normalidade e Mann-Whitney

```{r}
shapiro_fieis <- shapiro.test(frequencia_produtos_fieis$n)
shapiro_nao_fieis <- shapiro.test(frequencia_produtos_nao_fieis$n)

print(shapiro_fieis)
print(shapiro_nao_fieis)
```

```{r}

teste_mann_whitney <- wilcox.test(frequencia_produtos_fieis$n, frequencia_produtos_nao_fieis$n, exact = FALSE)
print(teste_mann_whitney)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Análise baseada no p-valor do teste de hipótese
if (teste_mann_whitney$p.value < 0.05) {
  conclusao <- "Há evidências suficientes para rejeitar a hipótese nula.\nIsso indica que há uma diferença significativa na frequência de compras do mesmo produto \nentre clientes fiéis e não fiéis.\n"
  
  if (mean(frequencia_produtos_fieis$n) > mean(frequencia_produtos_nao_fieis$n)) {
    conclusao <- paste(conclusao, "Clientes fiéis compram mais do mesmo produto em comparação com clientes não fiéis.\n")
  } else {
    conclusao <- paste(conclusao, "Clientes não fiéis compram mais do mesmo produto em comparação com clientes fiéis.\n")
  }
} else {
  conclusao <- "Não há evidências suficientes para rejeitar a hipótese nula.\nIsso sugere que não há uma diferença significativa na frequência de compras do mesmo produto entre clientes fiéis e não fiéis.\n"
}
```

######################### 



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Sequência para medianas
# Contagem de frequência de compra do mesmo produto entre clientes fiéis

frequencia_produtos_fieis <- clientes_fieis %>%
  group_by(produto) %>%
  summarise(frequencia = n())
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Converter a coluna 'frequencia' para numérico
frequencia_produtos_fieis$frequencia <- as.numeric(frequencia_produtos_fieis$frequencia)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Exibir o resultado da contagem para clientes fiéis
print(frequencia_produtos_fieis)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Contagem de frequência de compra do mesmo produto entre clientes não fiéis
frequencia_produtos_nao_fieis <- clientes_nao_fieis %>%
  group_by(produto) %>%
  summarise(frequencia = n())
```

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
frequencia_produtos_nao_fieis$frequencia <- as.numeric(frequencia_produtos_nao_fieis$frequencia)
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Exibir o resultado da contagem para clientes não fiéis
print(frequencia_produtos_nao_fieis)
```

### Medianas clientes fiéis e clientes não fiéis

```{r}
mediana_fieis <- median(frequencia_produtos_fieis$frequencia)
mediana_nao_fieis <- median(frequencia_produtos_nao_fieis$frequencia)

```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Exibição das medianas
print(paste("Mediana da frequência de compra do mesmo produto por clientes fiéis:", mediana_fieis))
print(paste("Mediana da frequência de compra do mesmo produto por clientes não fiéis:", mediana_nao_fieis))
```



```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
## Conclusão baseada na comparação das medianas
if (mediana_fieis > mediana_nao_fieis) {
  conclusao_mediana <- "Clientes fiéis compram mais do mesmo produto em comparação com clientes não fiéis, \ncom base na mediana das frequências de compra."
} else if (mediana_fieis < mediana_nao_fieis) {
  conclusao_mediana <- "Clientes não fiéis compram mais do mesmo produto em comparação com clientes fiéis, com base na mediana das frequências de compra."
} else {
  conclusao_mediana <- "A mediana das frequências de compra é igual para clientes fiéis e não fiéis."
}

```

### Conclusões: 

#### Com base nas medianas:

```{r}

cat(conclusao_mediana)
```

#### Com base no P- valor do teste de hipótese Mann-Whitney:

```{r}
cat(conclusao)
```


### Conclusão final: 

#### Clientes fiéis compram mais do mesmo produto em comparação com clientes não fieis. 